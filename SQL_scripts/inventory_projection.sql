WITH 
    MRP_BOOK_STOCK_H_F AS(
    SELECT DISTINCT
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    SUM("TOTAL_STOCK") "TOTAL_STOCK",
    SUM("TOTAL_DEMAND") "TOTAL_DEMAND",
    SUM("TOTAL_RECEIPTS") "TOTAL_RECEIPTS",
    SUM("TOTAL_QUANTITY") "TOTAL_QUANTITY",
    "UOM"
    FROM(
        SELECT
        MB.material_key "MATERIAL_KEY",
        MB.mrp_element_ind, 
        --SETTING THE DATE FOR STOCK (WB) AND QM STOCK (QM) EQUAL TO CURRENT DATE
        CURRENT_DATE "Date",
        CASE WHEN LENGTH (CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date"))) = 6 
        THEN CAST(CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date")) AS INTEGER)
        ELSE CAST(CONCAT(YEAROFWEEKISO("Date"),0,WEEKISO("Date")) AS INTEGER) 
        END AS "CALENDAR_YEAR_WEEK",
        MB.MRP_actual_req_qty  "TOTAL_STOCK",
        TO_NUMBER(0) "TOTAL_DEMAND",
        TO_NUMBER(0) "TOTAL_RECEIPTS",
        MB.MRP_actual_req_qty AS "TOTAL_QUANTITY",
        MB.BUOM AS "UOM"
        FROM PGSUDH_DL_PROD.PGSUDH_CDM.ecc_mrp_book MB
        WHERE
        MB.plant_key in ('BE37','BE94', 'BE95')
        --WB= STOCK, QM= Quality batches
        AND MB.mrp_element_ind IN ('QM','WB')
        AND (MB.MATERIAL_KEY LIKE 'H%' OR MB.MATERIAL_KEY LIKE 'F%')
        HAVING YEAROFWEEKISO("Date") < YEAROFWEEKISO(CURRENT_DATE())+2
        ORDER BY 
        MATERIAL_KEY,
        "Date")
    GROUP BY 
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    "UOM"
    ORDER BY 
    "CALENDAR_YEAR_WEEK" asc)
    ,
    MRP_BOOK_API_PO AS(
    SELECT DISTINCT
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    SUM("TOTAL_STOCK") "TOTAL_STOCK",
    SUM("TOTAL_DEMAND") "TOTAL_DEMAND",
    SUM("TOTAL_RECEIPTS") "TOTAL_RECEIPTS",
    SUM("TOTAL_QUANTITY") "TOTAL_QUANTITY",
    "UOM"
    FROM(
        SELECT
        MB.material_key "MATERIAL_KEY",
        MB.mrp_element_ind, 
        CASE WHEN MB.RESCH_DATE IS NOT NULL THEN MB.RESCH_DATE 
        ELSE MB.Order_finish_date END as "Date",	 
        CASE WHEN LENGTH (CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date"))) = 6 
        THEN CAST(CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date")) AS INTEGER)
        ELSE CAST(CONCAT(YEAROFWEEKISO("Date"),0,WEEKISO("Date")) AS INTEGER) 
        END AS "CALENDAR_YEAR_WEEK",
        TO_NUMBER(0) "TOTAL_STOCK",
        TO_NUMBER(0) "TOTAL_DEMAND",
        CASE WHEN MB.MRP_actual_req_qty >= 0 THEN MRP_actual_req_qty ELSE 0 END "TOTAL_RECEIPTS",
        MB.MRP_actual_req_qty AS "TOTAL_QUANTITY",
        MB.BUOM AS "UOM"
        FROM PGSUDH_DL_PROD.PGSUDH_CDM.ecc_mrp_book MB
        WHERE
        MB.plant_key = 'BE37'
        --LA= ShipNt/OrdCnf, BA=PurRqs, BE= Purchase orders 
        AND MB.mrp_element_ind IN ('LA','BE','BA')
        AND (MB.MATERIAL_KEY LIKE 'H%' OR MB.MATERIAL_KEY LIKE 'F%')
        HAVING YEAROFWEEKISO("Date") < YEAROFWEEKISO(CURRENT_DATE())+2
        ORDER BY 
        MATERIAL_KEY,
        "Date")
    GROUP BY 
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    "UOM"
    ORDER BY 
    "CALENDAR_YEAR_WEEK" asc)
    ,
    MRP_BOOK_NPPM_PPM AS(
    SELECT DISTINCT
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    SUM("TOTAL_STOCK") "TOTAL_STOCK",
    SUM("TOTAL_DEMAND") "TOTAL_DEMAND",
    SUM("TOTAL_RECEIPTS") "TOTAL_RECEIPTS",
    SUM("TOTAL_QUANTITY") "TOTAL_QUANTITY",
    "UOM"
    FROM(
        SELECT
        MB.material_key "MATERIAL_KEY",
        MB.mrp_element_ind, 
        CASE 
        --SETTING THE DATE FOR STOCK (WB) AND QM STOCK (QM) EQUAL TO CURRENT DATE
        WHEN MB.mrp_element_ind = 'WB' OR MB.mrp_element_ind = 'QM' THEN CURRENT_DATE
        --SOME PLANNED ORDERS EXIST IN MRP BOOK AND NOT IN PLANNED ORDER TABLE
        WHEN MB.mrp_element_ind = 'AR' AND PO.start_date_process_order IS NULL THEN MB.Order_finish_date
        --SETTING DATE OF PROCESS ORDERS (AR) TO START DATE OF PROCESS ORDERS
        WHEN MB.mrp_element_ind = 'AR' THEN PO.start_date_process_order 
        --SOME PROCESS ORDERS EXIST IN MRP BOOK AND NOT IN PROCESS ORDER TABLE
        WHEN MB.mrp_element_ind = 'SB' AND PL.start_date_planned_order IS NULL THEN MB.Order_finish_date
        --SETTING DATE OF PLANNED ORDERS (AR) TO START DATE OF PLANNED ORDERS
        WHEN MB.mrp_element_ind = 'SB' THEN PL.start_date_planned_order
        WHEN MB.RESCH_DATE IS NOT NULL THEN MB.RESCH_DATE 
        ELSE MB.Order_finish_date END as "Date",
        CASE WHEN LENGTH (CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date"))) = 6 THEN CAST(CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date")) AS INTEGER)
        ELSE CAST(CONCAT(YEAROFWEEKISO("Date"),0,WEEKISO("Date")) AS INTEGER) END AS "CALENDAR_YEAR_WEEK",
        CASE WHEN MB.mrp_element_ind IN ('WB', 'QM') THEN MRP_actual_req_qty ELSE 0 END as "TOTAL_STOCK",
        CASE WHEN MB.MRP_actual_req_qty < 0 THEN MRP_actual_req_qty ELSE 0 END AS "TOTAL_DEMAND",
        CASE WHEN (MB.MRP_actual_req_qty >= 0 AND MB.mrp_element_ind NOT IN ('WB','QM'))  THEN MRP_actual_req_qty ELSE 0 END AS "TOTAL_RECEIPTS",
        MB.MRP_actual_req_qty AS "TOTAL_QUANTITY",
        MB.BUOM AS "UOM"
        FROM PGSUDH_DL_PROD.PGSUDH_CDM.ecc_mrp_book MB
        LEFT JOIN 
        (SELECT DISTINCT
        process_order.PROCESS_ORDER, 
        CASE WHEN process_order.actual_start_date IS NOT NULL THEN process_order.actual_start_date ELSE process_order.scheduled_release_date END AS start_date_process_order
        FROM PGSUDH_DL_PROD.PGSUDH_CDM.ecc_process_order process_order
        WHERE 
        process_order.plant_key ='BE37'
        )PO
        ON MB.manufacturing_order = PO.PROCESS_ORDER
        LEFT JOIN 
        (SELECT DISTINCT
        planned_orders.planned_order, 
        planned_orders.scheduled_start_date as start_date_planned_order
        FROM PGSUDH_DL_PROD.PGSUDH_CDM.ecc_planned_orders planned_orders
        WHERE 
        planned_orders.plant_key ='BE37'
        )PL
        ON MB.source_number = PL.planned_order 
        WHERE
        MB.plant_key in ('BE37','BE94', 'BE95')
        AND (MB.MATERIAL_KEY LIKE 'P%' OR MB.MATERIAL_KEY LIKE 'R%')
        HAVING YEAROFWEEKISO("Date") < YEAROFWEEKISO(CURRENT_DATE())+2
        ORDER BY 
        MATERIAL_KEY,
        "Date")
    GROUP BY 
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    "UOM"
    ORDER BY 
    "CALENDAR_YEAR_WEEK" asc)
    ,
    APO_RECEIPTS_VIEW_LOC_KEY_BE37 AS (
    SELECT DISTINCT
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    SUM("TOTAL_STOCK") "TOTAL_STOCK",
    SUM("TOTAL_DEMAND") "TOTAL_DEMAND",
    SUM("TOTAL_RECEIPTS") "TOTAL_RECEIPTS",
    SUM("TOTAL_QUANTITY") "TOTAL_QUANTITY",
    "UOM"
    FROM(
        SELECT 
        APO_RECEIPTS_VIEW.MATERIAL_KEY "MATERIAL_KEY",
        APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE,
        CASE WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('BI','EG','EI') AND APO_RECEIPTS_VIEW.START_DATE < CURRENT_DATE() THEN CURRENT_DATE()
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('BI','EG','EI') THEN APO_RECEIPTS_VIEW.START_DATE
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('AU','AV','AY') AND APO_RECEIPTS_VIEW.START_DATE < CURRENT_DATE() THEN APO_RECEIPTS_VIEW.AVAILABLE_WO_GR_DATETIME
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('AU','AV','AY') THEN APO_RECEIPTS_VIEW.START_DATE
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('AA','AB','AI','AJ') AND APO_RECEIPTS_VIEW.AVAILABLE_WO_GR_DATETIME IS NULL AND APO_RECEIPTS_VIEW.START_DATE < CURRENT_DATE() THEN CURRENT_DATE()
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('AA','AB','AI','AJ') AND APO_RECEIPTS_VIEW.AVAILABLE_WO_GR_DATETIME IS NULL THEN APO_RECEIPTS_VIEW.START_DATE 
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('AA','AB','AI','AJ') AND APO_RECEIPTS_VIEW.AVAILABLE_WO_GR_DATETIME < CURRENT_DATE() THEN CURRENT_DATE() 
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('AA','AB','AI','AJ') THEN APO_RECEIPTS_VIEW.AVAILABLE_WO_GR_DATETIME
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('EQ') THEN APO_RECEIPTS_VIEW.END_DATE
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('EE','EL','ZT') THEN APO_RECEIPTS_VIEW.START_DATE 
        ELSE APO_RECEIPTS_VIEW.START_DATE END "Date",
        CASE WHEN LENGTH (CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date"))) = 6 THEN CAST(CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date")) AS INTEGER)
        ELSE CAST(CONCAT(YEAROFWEEKISO("Date"),0,WEEKISO("Date")) AS INTEGER) END AS "CALENDAR_YEAR_WEEK",
        TO_NUMBER(0) "TOTAL_STOCK",
        CASE WHEN SCHED_RECEIPTS_TYPE IN ('AU', 'AY', 'EK', 'AV','ZT','EQ', 'EG', 'AW','BI','EL')
        --CASE WHEN SCHED_RECEIPTS_TYPE IN ('AU', 'AY', 'EK', 'AG','EF', 'EL', 'AV', 'BF','ZT','EQ','EA','BI')
        THEN -APO_RECEIPTS_VIEW.QUANTITY ELSE 0 END "TOTAL_DEMAND",
        CASE WHEN SCHED_RECEIPTS_TYPE IN ('AA', 'AJ', 'EI','AI', 'EE','AB','ZS')
        --CASE WHEN SCHED_RECEIPTS_TYPE IN ('AA', 'AJ', 'EI', 'EB','EG', 'AI', 'EH', 'EE','AB','BH')
        THEN APO_RECEIPTS_VIEW.QUANTITY ELSE 0 END "TOTAL_RECEIPTS",
        CASE WHEN "TOTAL_DEMAND" = 0 THEN "TOTAL_RECEIPTS" ELSE "TOTAL_DEMAND" END "TOTAL_QUANTITY",
        APO_RECEIPTS_VIEW.UNIT_OF_MEASURE "UOM"
        FROM PGSUDH_DL_PROD.PGSUDH_CDM.APO_RECEIPTS_VIEW APO_RECEIPTS_VIEW
        WHERE 
        LOCATION_KEY = 'BE37'
        AND (APO_RECEIPTS_VIEW.MATERIAL_KEY LIKE 'F%' OR APO_RECEIPTS_VIEW.MATERIAL_KEY LIKE 'H%')
        AND to_number(CALENDAR_YEAR) < YEAR(CURRENT_DATE())+2
        ORDER BY 
        APO_MATERIAL_LOCATION_KEY,
        CALENDAR_YEAR_WEEK ASC)
    GROUP BY 
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    "UOM"
    ORDER BY 
    "CALENDAR_YEAR_WEEK" ASC)
    ,
    APO_RECEIPTS_VIEW_SOURCE_KEY_BE37 AS (
    SELECT DISTINCT
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    SUM("TOTAL_STOCK") "TOTAL_STOCK",
    SUM("TOTAL_DEMAND") "TOTAL_DEMAND",
    SUM("TOTAL_RECEIPTS") "TOTAL_RECEIPTS",
    SUM("TOTAL_QUANTITY") "TOTAL_QUANTITY",
    "UOM"
    FROM(
        SELECT 
        APO_RECEIPTS_VIEW.MATERIAL_KEY "MATERIAL_KEY",
        APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE,
        CASE WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('BC','BH','EB','ED','EF','EH','EA', 'EE', 'AI', 'SR','ZN') AND APO_RECEIPTS_VIEW.START_DATE < CURRENT_DATE() THEN CURRENT_DATE()
        WHEN APO_RECEIPTS_VIEW.SCHED_RECEIPTS_TYPE IN ('BC','BH','EB','ED','EF','EH','EA', 'EE', 'AI', 'SR','ZN') THEN APO_RECEIPTS_VIEW.START_DATE
        ELSE APO_RECEIPTS_VIEW.START_DATE END "Date",
        CASE WHEN LENGTH (CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date"))) = 6 THEN CAST(CONCAT(YEAROFWEEKISO("Date"),WEEKISO("Date")) AS INTEGER)
        ELSE CAST(CONCAT(YEAROFWEEKISO("Date"),0,WEEKISO("Date")) AS INTEGER) END AS "CALENDAR_YEAR_WEEK",
        TO_NUMBER(0) "TOTAL_STOCK",
        CASE WHEN SCHED_RECEIPTS_TYPE IN ('ED','EB','EH','BC','BH') --'AY'
        THEN -APO_RECEIPTS_VIEW.QUANTITY ELSE 0 END "TOTAL_DEMAND",
        CASE WHEN SCHED_RECEIPTS_TYPE IN ('EF','EA','ET')
        THEN APO_RECEIPTS_VIEW.QUANTITY ELSE 0 END "TOTAL_RECEIPTS",
        CASE WHEN "TOTAL_DEMAND" = 0 THEN "TOTAL_RECEIPTS" ELSE "TOTAL_DEMAND" END "TOTAL_QUANTITY",
        APO_RECEIPTS_VIEW.UNIT_OF_MEASURE "UOM"
        FROM PGSUDH_DL_PROD.PGSUDH_CDM.APO_RECEIPTS_VIEW APO_RECEIPTS_VIEW
        WHERE 
        SOURCE_LOCATION = 'BE37'
        AND (LOCATION_KEY != 'BE37' OR LOCATION_KEY IS NULL)
        AND (APO_RECEIPTS_VIEW.MATERIAL_KEY LIKE 'F%' OR APO_RECEIPTS_VIEW.MATERIAL_KEY LIKE 'H%')
        AND to_number(CALENDAR_YEAR) < YEAR(CURRENT_DATE())+2
        ORDER BY 
        APO_MATERIAL_LOCATION_KEY,
        CALENDAR_YEAR_WEEK ASC)
    GROUP BY 
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    "UOM"
    ORDER BY 
    "CALENDAR_YEAR_WEEK" ASC)
    SELECT 
    "MATERIAL_KEY",
    "CALENDAR_YEAR_WEEK",
    "TOTAL_STOCK",
    "TOTAL_DEMAND",
    "TOTAL_RECEIPTS",
    "TOTAL_QUANTITY"
    --SUM(TOTAL_QUANTITY) OVER (PARTITION BY "MATERIAL_KEY" ORDER BY "CALENDAR_YEAR_WEEK") "PROJECTED_INVENTORY"
    FROM
        (SELECT
        "MATERIAL_KEY",
        "CALENDAR_YEAR_WEEK",
        SUM(TOTAL_STOCK) "TOTAL_STOCK",
        SUM(TOTAL_DEMAND) "TOTAL_DEMAND",
        SUM(TOTAL_RECEIPTS) "TOTAL_RECEIPTS",
        SUM(TOTAL_QUANTITY) "TOTAL_QUANTITY"
        FROM(
            SELECT *
            FROM MRP_BOOK_STOCK_H_F
            UNION ALL
            SELECT *
            FROM MRP_BOOK_API_PO
            UNION ALL
            SELECT *
            FROM MRP_BOOK_NPPM_PPM
            UNION ALL
            SELECT*
            FROM APO_RECEIPTS_VIEW_LOC_KEY_BE37
            UNION ALL
            SELECT*
            FROM APO_RECEIPTS_VIEW_SOURCE_KEY_BE37
            )
        GROUP BY
        "MATERIAL_KEY",
        "CALENDAR_YEAR_WEEK")
    ORDER BY
    MATERIAL_KEY,
    CALENDAR_YEAR_WEEK
